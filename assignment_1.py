# -*- coding: utf-8 -*-
"""Assignment-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d1aA-cnDqGlb7emYCYEUktBhG8n5XSOl

# Assignment-1

> Submitted by **Sanchita Devi**

## Question 1: The Treasure Hunt

Story: You are a treasure hunter on an island filled with mysterious caves. Each cave has a number
of treasures hidden inside. Write a function `total_treasure(caves)` that takes a list of integers
representing the treasures in each cave and returns the total amount of treasure you can collect.
"""

def total_treasure(caves):
  # total amount of treasure.
  total_treasure = sum(caves)
  return total_treasure

caves = [3, 5, 2, 8, 1]
total = total_treasure(caves)
print(f"Total treasure collected: {total}")  # Output: Total treasure collected: 19

"""## Question 2: The Magical Forest
Story: In a magical forest, each creature has a name, and some names are the same. Write a
function `unique_creatures(creatures)` that takes a list of creature names and returns a list of unique
names to help you identify each creature without confusion.
"""

def unique_creatures(creatures):
    # Convert list of creatures to a set to remove duplicates
    unique_names = (set(creatures))
    # Converting the set back to a list to maintain the structure.
    return list(unique_names)

creatures_name = ["Dragon", "Elephant", "Unicorn", "Jellyfish", "Unicorn"]
unique_names = unique_creatures(creatures_name)
print(f"Unique names: {unique_names}")
# Output : Unique names: ['Elephant', 'Dragon', 'Unicorn', 'Jellyfish']

"""## Question 3: The Robot Factory
Story: In a robot factory, each robot has a unique serial number. Write a function
`is_serial_number_valid(serial_number)` that checks if a given serial number follows the
correct format (e.g., it must be 8 characters long and contain at least one letter and one number).
"""

def is_serial_number_valid(serial_number) :
  # Checking the serial number length is 8
    if len(serial_number) != 8:
        return False

    # Initializing flags to check letter and number
    has_letter = False
    has_num = False
    # Iterating each character in the serial number
    for char in serial_number:
        # Checking if the character is a letter or number
        if char.isalpha():
            has_letter = True
        elif char.isdigit():
            has_num = True
    # Checking if both letter and number are present
    return has_letter and has_num

serial_number = "ABCD1234"
serial_number1 = "12345678"

print(f"Serial {serial_number} is valid: ", is_serial_number_valid(serial_number))  # Output: Serial ABCD1234 is valid:  True
print(f"Serial {serial_number1} is valid: ", is_serial_number_valid(serial_number1))  # Output: Serial 12345678 is valid:  False

"""## Question 4: The Cosmic Explorer
Story: As an explorer of the cosmos, you collect data about different planets. Write a function
`planet_summary(planets)` that takes a dictionary where the keys are planet names and the values
are their diameters, and returns a string summarizing the planet with the largest diameter.
"""

def planet_summary(planets):
  # Find the planet with largest diameter using max function and key
  largest_planet = max(planets, key=planets.get)

  # Get the diameter of largest planet
  largest_diameter = planets[largest_planet]

  # Return a string summarizing the largest planet and its diameter
  return f"{largest_planet} is the largest planet with a diameter of {largest_diameter}."

planets = {
  "Mercury": 4879,
  "Venus": 12104,
  "Earth": 12742,
  "Mars": 6779,
  "Jupiter": 142984,
  "Saturn": 120536,
  "Uranus": 51118,
  "Neptune": 49528
}

print(planet_summary(planets))  # Output: Jupiter is the largest planet with a diameter of 142984.

"""## Question 5: The Fantasy Game
Story: In a fantasy game, you have a character with various skills. Write a function
`level_up(skills)` that takes a dictionary of skills and their levels, and increases each skill level
by 1. If a skill reaches level 10, it should be capped at 10.
"""

def level_up(skills):
    # Iterate through each skill in the skills dictionary
    for skill in skills:
        # Check if the skill level is less than 10
        if skills[skill] < 10:
            # Increase the skill level by 1
            skills[skill] += 1
            # If the skill level reaches 10, cap it at 10
    return skills

skills = {"strength": 5, "creativity": 8, "intelligence": 3, "leadership" : 10}
print(level_up(skills))
# Output : {'strength': 6, 'creativity': 9, 'intelligence': 4, 'leadership': 10}

"""## Question 6: The Bookstore Inventory
Story: You own a bookstore and want to manage your inventory. Write a function
`inventory_summary(inventory)` that takes a dictionary of book titles and their quantities, and
returns a string listing all books that are out of stock.
"""

def inventory_summary(inventory):
  out_of_stock_books = []
  for book, quantity in inventory.items():
    # If the quantity is zero, the book title is added to the out_of_stock_books list.
    if quantity == 0:
      out_of_stock_books.append(book)

  if out_of_stock_books:
    return "Out of stock books: " + ", ".join(out_of_stock_books)
  else:
    return "All books are in stock."

inventory = {"The Alchemist": 5, "The Lord of the Rings": 0, "The old man and sea": 2, "Harry Potter": 0}
print(inventory_summary(inventory))
# Output: Out of stock books: The Lord of the Rings, Harry Potter